<%- include('../userMainlayouts/mainheader.ejs') %>
<link rel="stylesheet" href="/public/userAssets/userAccount/assets/css/style.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">

<main class="main p-t-75" style="background-color: rgb(255, 255, 255); font-family: Poppins-Medium;" >
    <div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        <div class="container">
            <h1 class="page-title" style="font-family: Poppins-Medium; color: #00000033;">My Account<span>Shop</span></h1>
        </div><!-- End .container -->
    </div><!-- End .page-header -->
    <nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                <li class="breadcrumb-item"><a href="#">Shop</a></li>
                <li class="breadcrumb-item active" aria-current="page">My Account</li>
            </ol>
        </div><!-- End .container -->
    </nav><!-- End .breadcrumb-nav -->

    <div class="page-content">
        <div class="dashboard">
            <div class="container">
                <div class="row">
                    <aside class="col-md-4 col-lg-3">
                        <ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="tab-dashboard-link" data-toggle="tab" href="#tab-dashboard" role="tab" aria-controls="tab-dashboard" aria-selected="true">Dashboard</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-account-link" data-toggle="tab" href="#tab-account" role="tab" aria-controls="tab-account" aria-selected="false">Account Details</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-orders-link" data-toggle="tab" href="#tab-orders" role="tab" aria-controls="tab-orders" aria-selected="false">Orders</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-downloads-link" data-toggle="tab" href="#tab-downloads" role="tab" aria-controls="tab-downloads" aria-selected="false">Add Address</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-address-link" data-toggle="tab" href="#tab-address" role="tab" aria-controls="tab-address" aria-selected="false">Address</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-wallet-link" data-toggle="tab" href="#tab-wallet" role="tab" aria-controls="tab-wallet" aria-selected="false">Wallet</a>
                            </li>
                            <li class="">
                                <a  href="logout">Sign Out</a>
                            </li>
                        </ul>
                    </aside><!-- End .col-lg-3 -->

                    <div class="col-md-8 col-lg-9">
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="tab-dashboard" role="tabpanel" aria-labelledby="tab-dashboard-link">
                                <p>Hello <span class="font-weight-normal text-dark">User</span> (not <span class="font-weight-normal text-dark">User</span>? <a href="#">Log out</a>) 
                                <br>
                                From your account dashboard you can view your <a href="#tab-orders" class="tab-trigger-link link-underline">recent orders</a>, manage your <a href="#tab-address" class="tab-trigger-link">shipping and billing addresses</a>, and <a href="#tab-account" class="tab-trigger-link">edit your password and account details</a>.</p>
                            </div><!-- .End .tab-pane -->

                            <div class="tab-pane fade" id="tab-account" role="tabpanel" aria-labelledby="tab-account-link">
                                <form id="profile-form" action="/update_profile" method="post" onsubmit="return validUser()">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <label for="fname">First Name *</label>
                                            <input type="text" class="form-control" id="fname" name="fname" value="<%= user.firstName %>">
                                            <span class="error" id="fname-error"></span>
                                        </div>
                                        <div class="col-sm-6">
                                            <label for="lname">Last Name *</label>
                                            <input type="text" class="form-control" id="lname" name="lname" value="<%= user.lastName %>" >
                                            <span class="error" id="lname-error"></span>
                                        </div>
                                    </div>
                                
                                    <div class="form-group">
                                        <label for="email">Email address *</label>
                                        <input type="email" class="form-control" id="email" name="email" value="<%= user.email %>" >
                                        <span class="error" id="email-error"></span>
                                    </div>
                                
                                    <div class="form-group">
                                        <label for="mobile">Mobile No *</label>
                                        <input type="text" class="form-control" id="mobile" name="mobile" value="<%= user.mobile %>" >
                                        <span class="error" id="mobile-error"></span>
                                    </div>
                                
                                   
                                
                                    <button type="submit" class="btn btn-outline-primary-2">
                                        <span>SAVE CHANGES</span>
                                    </button>
                                </form>
                                <form id="password-change-form">
                                    <!-- Your existing form fields -->
                                    <div class="form-group">
                                        <label for="currentPassword">Current password *</label>
                                        <input type="password" class="form-control" id="currentPassword" name="currentPassword" oninput="validateCurrentPassword()">
                                        <span class="error" id="currentPassword-error"></span>
                                    </div>
                                
                                
                                    <div class="form-group">
                                        <label for="newPassword">New password *</label>
                                        <input type="password" class="form-control" id="newPassword" name="newPassword" oninput="validatePasswordLength()">
                                        <span class="error" id="newPassword-error"></span>
                                    </div>
                                
                                    <div class="form-group">
                                        <label for="confirmPassword">Confirm new password *</label>
                                        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" oninput="validatePasswordMatch()">
                                        <span class="error" id="confirmPassword-error"></span>
                                    </div>
                                    <div id="success-message" class="success-message"></div>
                                    <div id="failed-message" class="error"></div>
                                    
                                
                                    <button type="button" onclick="changePassword()" class="btn btn-outline-primary-2">
                                        <span>CHANGE PASSWORD</span>
                                    </button>
                                </form>
                                
                            </div><!-- .End .tab-pane -->
                            
                            <div class="tab-pane fade" id="tab-orders" role="tabpanel" aria-labelledby="tab-orders-link">
                                    
                                <a href="/orders" class="btn btn-outline-primary-2">
                                    <span>View all Orders</span>
                                    <i class="bi bi-box"></i> <!-- Replace with the desired icon class for "Orders" -->
                                </a>
                              
                                       
                                           
                                                <div class="col-lg-12">
                                <table class="table table-cart table-mobile">
                                    <thead>
                                        <tr>
                                            <th class="text-center">No.</th>
                                            <th class="text-center">Order Date</th>
                                            <th class="text-center">Amount</th>
                                            <th class="text-center">Payment</th>
                                            <th class="text-center">Order Status</th>
                                            <th class="text-center">Payment Status</th>
                                            <th class="text-center">Expected Delivery</th>
                                            <th class="text-center">Tracking Number</th>
                                            <th class="text-center">Details</th>
                                        </tr>
                                    </thead>
        
                                    <tbody>
                                      <% if(order.length>0){%>
                                           <% for(let i=0;i<order.length;i++) {%>
                                            
                                        <tr>
                                            <td class="text-center"><%= i+1 %></td>
                                            <td class="text-center"><%= order[i].orderDate.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).replace(/\//g, '-') %></td>
                                            <td class="text-center">₹ <%= order[i].totalAmount %></td>
                                            <td class="text-center"> <%= order[i].paymentOption %></td>
                                            <td class="text-center"><% for (let j = 0; j < order[i].products.length; j++) { %>
                                                <div>
                                                  <strong><%= j + 1 %> <%= order[i].products[j].product_Id.productName %></strong><br>
                                                  <%= order[i].products[j].status %>
                                                </div>
                                              <% } %> </td>
                                            <td class="text-center"><% for (let j = 0; j < order[i].products.length; j++) { %>
                                                <div>
                                                  <strong><%= j + 1 %> <%= order[i].products[j].product_Id.productName %></strong><br>
                                                  <%= order[i].products[j].paymentStatus %>
                                                </div>
                                              <% } %> </td>
                                            <td class="text-center"><%= order[i].expectedDelivery.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).replace(/\//g, '-') %></td>
                                            <td class="text-center"><%= order[i].orderID %></td>
                                            <td class="text-center">
                                                <a href="/order_details?id=<%= order[i]._id %>" class="btn-outline-dark btn-round view-details" >View Details</a>
                                            </td>
                                        </td>
                                        
                                        <!-- <td class="remove-col"><button class="btn-remove"><i class="icon-close"></i></button></td> -->
                                            
                                        </tr>
                                       
                                        <% }%>
                                       <% }else{%>
                                       
                                        
                                            <div
                        class="error-content text-center">
                        <div class="container">
                          <h1 class="error-title">No Orders</h1>
                          
                          <p>
                            You Ordered Nothing.
                          </p>
                          <a
                            href="/product"
                            class="btn btn-outline-primary-2 btn-minwidth-lg"
                          >
                            <span >SHOPPING</span>
                            <i class="icon-long-arrow-right"></i>
                          </a>
                        </div>
                        
                      </div>
                                        <%}%>
                      
                                    </tbody>
                                </table>
                                                </div>
                                        <!-- End .table table-wishlist -->
        
                            </div><!-- .End .tab-pane -->

                            <div class="tab-pane fade" id="tab-downloads" role="tabpanel" aria-labelledby="tab-downloads-link">
                                <h3 class="card-title">Add Address</h3><!-- End .card-title -->
                                <form action="/add_address" method="post" onsubmit="return validAddress()">
                                    <div class="row">
                                        <div class="form-group col-sm-6">
                                            <label for="fname">First Name</label>
                                            <input type="text" class="form-control" id="fname1" name="fname">
                                            <p id="fname-error" style="color: red;"></p>
                                        </div>
                                        <div class="form-group col-sm-6">
                                            <label for ="lname">Last Name</label>
                                            <input type="text" class="form-control" id="lname1" name="lname">
                                            <p id="lname-error" style="color: red;"></p>
                                        </div>
                                        <div class="form-group col-12">
                                            <label for="mobile">Mobile</label>
                                            <input type="text" class="form-control" id="mobile1" name="mobile">
                                            <p id="mobile-error" style="color: red;"></p>
                                        </div>
                                        <div class="form-group col-12">
                                            <label for="email">Email</label>
                                            <input type="text" class="form-control" id="email1" name="email">
                                            <p id="email-error" style="color: red;"></p>
                                        </div>
                                        <div class="form-group col-12">
                                            <label for="housename">House Name</label>
                                            <input type="text" class="form-control" id="housename" name="housename">
                                            <p id="housename-error" style="color: red;"></p>
                                        </div>
                                        <div class="form-group col-12">
                                            <label for="city">City</label>
                                            <input type="text" class="form-control" id="city" name="city">
                                            <p id="city-error" style="color: red;"></p>
                                        </div>
                                        <div class="form-group col-12">
                                            <label for="pin">Pin</label>
                                            <input type="text" class="form-control" id="pin" name="pin">
                                            <p id="pin-error" style="color: red;"></p>
                                        </div>
                                        <div class="form-group col-12">
                                            <label for="district">District</label>
                                            <input type="text" class="form-control" id="district" name="district">
                                            <p id="district-error" style="color: red;"></p>
                                        </div>
                                        <div class="form-group col-12">
                                            <label for="state">State</label>
                                            <input type="text" class="form-control" id="state" name="state">
                                            <p id="state-error" style="color: red;"></p>
                                        </div>
                                        <div class="form-group col-12">
                                            <p id="fname-error" class="error-message" style="color: red;"></p>
                                            <!-- Add similar error elements for other fields -->
                                            <p id="all-error" class="error-message" style="color: red;"></p>
                                        </div>
                                        <!-- Add input fields for other address details here -->
                                        <div class="form-group col-12">
                                            
                                            <button type="submit" class="btn btn-outline-primary-2">
                                                <span>Add Address</span>
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            
                            

                            <div class="tab-pane fade" id="tab-address" role="tabpanel" aria-labelledby="tab-address-link">
                                <p>The following addresses will be used on the checkout page by default.</p>
                                
                                    <div class="row" id="addressList">
                                        <% if (address) {%>
                                            <% address.address.forEach((data)=> { %>
                                        <div class="col-lg-6">
                                            <div class="card card-dashboard">
                                                <div class="card-body" id="address<%= data._id %>">
                                                    <h3 class="card-title">Billing Address</h3>

                                                    <p><%= data.fname %> <%= data.lname %><br>
                                                    <%= data.housename %><br>
                                                    <%= data.email %><br>
                                                    <%= data.pin %><br>
                                                    <%= data.city %>, <%= data.district %>, <%= data.state %><br>
                                                    Phone: <%= data.mobile %><br>
                                                    Email: <%= data.email %><br>
                                                    <a href="#" class="edit-address-link"
                                                            data-address-id="<%= data._id %>"
                                                            data-first-name="<%= data.fname %>"
                                                            data-last-name="<%= data.lname %>"
                                                            data-email="<%= data.email %>"
                                                            data-mobile="<%= data.mobile %>"
                                                            data-housename="<%= data.housename %>"
                                                            data-pin="<%= data.pin %>"
                                                            data-city="<%= data.city %>"
                                                            data-district="<%= data.district %>"
                                                            data-state="<%= data.state %>">
                                                            Edit <i class="icon-edit"></i>
                                                        </a></p>
                                                        <button
                                                            class="btn btn-danger delete-address"
                                                            data-address-id="<%= data._id %>"
                                                        >
                                                            Delete Address
                                                        </button>
                                                </div>
                                            </div>
                                        </div>
                                    <% })%>
                                    <%}else{%>
                                <%} %>
                            </div>
                            </div><!-- .End .tab-pane -->
                            <div class="tab-pane fade" id="tab-wallet" role="tabpanel" aria-labelledby="tab-wallet-link">
                                <a href="/wallet" class="btn btn-outline-primary-2">
                                    <span>Add Money</span>
                                    <i class="bi bi-currency-dollar"></i> <!-- Replace with the desired icon class -->
                                </a>
                                <p id="walletBalance" class="wallet-balance" style="text-align: center;">
                                    <strong>Wallet Balance: <%= wallet %></strong>
                                </p>
                            </div>
                           
                        </div>
                    </div><!-- End .col-lg-9 -->
                </div><!-- End .row -->
            </div><!-- End .container -->
        </div><!-- End .dashboard -->
    </div><!-- End .page-content -->
</main><!-- End .main -->

<div class="modal fade" id="editAddressModal" tabindex="0" role="dialog" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-container">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="/edit_address" method="post" onsubmit="return validateEdit()">
                    <!-- Add the input fields for editing the address as described earlier -->
                    <!-- Make sure to include an input field for capturing the address ID -->
                    <div class="form-group">
                        <label for="editFirstName">First Name</label>
                        <input type="text" class="form-control" id="editFirstName" name="fname">
                        <span id="fname1-error" class="error"></span>
                    </div>
                    <div class="form-group">
                        <label for="editLastName">Last Name</label>
                        <input type="text" class ="form-control" id="editLastName" name="lname">
                        <span id="lname1-error" class="error"></span>
                    </div>
                    <div class="form-group">
                        <label for="editEmail">Email</label>
                        <input type="email" class="form-control" id="editEmail" name="email">
                        <span id="email1-error" class="error"></span>
                    </div>
                    <div class="form-group">
                        <label for="editMobile">Mobile</label>
                        <input type="text" class="form-control" id="editMobile" name="mobile">
                        <span id="mobile1-error" class="error"></span>
                    </div>
                    <div class="form-group">
                        <label for="editHousename">House Name</label>
                        <input type="text" class="form-control" id="editHousename" name="housename">
                        <span id="housename1-error" class="error"></span>
                    </div>
                    <div class="form-group">
                        <label for="editCity">City</label>
                        <input type="text" class="form-control" id="editCity" name="city">
                        <span id="city1-error" class="error"></span>
                    </div>
                    <div class="form-group">
                        <label for="editState">State</label>
                        <input type="text" class="form-control" id="editState" name="state">
                        <span id="state1-error" class="error"></span>
                    </div>
                    <div class="form-group">
                        <label for="editDistrict">District</label>
                        <input type="text" class="form-control" id="editDistrict" name="district">
                        <span id="district1-error" class="error"></span>
                    </div>
                    <div class="form-group">
                        <label for ="editPin">Pin</label>
                        <input type="text" class="form-control" id="editPin" name="pin">
                        <span id="pin1-error" class="error"></span>
                    </div>
                
                    <!-- Include an input field to capture the address ID (hidden input) -->
                    <input type="hidden" id="editAddressId" name="editAddressId">
                
                    <button type="submit" class="btn btn-outline-primary-2">
                        <span>Save Changes</span>
                    </button>
                </form>
            </div>
        </div>
    </div>
    </div>
</div>

<style>
    /* Style the modal header */
    .modal-container {
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background overlay */
    z-index: 999; /* Ensure it's above other content */
}

/* Style the modal content */
.modal-content {
    background-color: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 5px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);
    max-width: 400px;
    max-height: 60vh; /* Reduce the maximum height to your desired value */
    overflow-y: auto; /* Enable vertical scrolling if needed */
    padding: 20px;
    text-align: center;
}

.modal-content::-webkit-scrollbar {
    width: 10px; /* Adjust the width as needed */
}

.modal-content::-webkit-scrollbar-track {
    background: transparent;
}

.modal-content::-webkit-scrollbar-thumb {
    background: #3498db; /* Color of the scroll thumb */
    border-radius: 5px; /* Rounded thumb */
}

.modal-title {
    font-size: 20px;
    font-weight: bold;
    margin-bottom: 20px;
}

/* Style the form input fields */
.form-group {
    margin-bottom: 20px;
}

.form-control {
    background-color: #f4f4f4;
    border: 1px solid #d0d0d0;
    border-radius: 3px;
    padding: 10px;
    width: 100%;
    transition: border 0.3s;
}

.form-control:focus {
    border-color: #3498db;
    outline: none;
}

/* Style the submit button */
.btn-outline-primary-2 {
    background-color: #3498db;
    border-color: #3498db;
    color: #fff;
    padding: 10px 20px;
    border-radius: 3px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.btn-outline-primary-2:hover {
    background-color: #2679b5;
}


</style>

<style>
    .error {
        color: red; 
    }
</style>

<style>
    .success-message {
        color: green; /* or any other color that indicates success */
    }
</style>

<script>
    // Add an event listener for the "Edit" links
    document.addEventListener('DOMContentLoaded', function() {
        const editLinks = document.querySelectorAll('.edit-address-link');
        const editAddressModal = document.getElementById('editAddressModal');

        editLinks.forEach(function(link) {
            link.addEventListener('click', function() {
                // Extract data attributes from the clicked link
                const addressId = link.getAttribute('data-address-id');
                const firstName = link.getAttribute('data-first-name');
                const lastName = link.getAttribute('data-last-name');
                const email = link.getAttribute('data-email');
                const mobile = link.getAttribute('data-mobile');
                const housename = link.getAttribute('data-housename');
                const pin = link.getAttribute('data-pin');
                const city = link.getAttribute('data-city');
                const district = link.getAttribute('data-district');
                const state = link.getAttribute('data-state');

                // Populate the "Edit Address" modal fields with existing data
                document.getElementById('editFirstName').value = firstName;
                document.getElementById('editLastName').value = lastName;
                document.getElementById('editEmail').value = email;
                document.getElementById('editMobile').value = mobile;
                document.getElementById('editHousename').value = housename;
                document.getElementById('editCity').value = city;
                document.getElementById('editState').value = state;
                document.getElementById('editDistrict').value = district;
                document.getElementById('editPin').value = pin;
                document.getElementById('editAddressId').value = addressId;

                // Show the "Edit Address" modal
                $(editAddressModal).modal('show');
            });
        });
    });
</script>




<!-- Inside your HTML file -->
<script>
    // Add an event listener to handle deleting addresses
//     document.addEventListener('DOMContentLoaded', function () {
//     const deleteButtons = document.querySelectorAll('.delete-address');

//     deleteButtons.forEach(function (button) {
//         button.addEventListener('click', function (event) {
//             event.preventDefault();
//             const addressId = event.target.getAttribute('data-address-id');
//             const addressDiv = document.getElementById(`address${addressId}`);
//             console.log('Address ID:', addressId);
//             console.log('Address Div:', addressDiv);

//             // Send an AJAX request to the server to delete the address
//             fetch(`/delete_address/${addressId}`, {
//                 method: 'DELETE',
//             })
//             .then(response => response.json())
//             .then(data => {
//                 console.log('Server Response:', data);

//                 if (data.success) {
//                     if (addressDiv) {
//                         addressDiv.remove(); // Remove the div from the DOM
//                         console.log('Address div removed successfully.');
//                     } else {
//                         console.error('Address card not found in the DOM');
//                     }
//                 } else {
//                     console.error('Failed to delete the address. Server response:', data);
//                 }
//             })
//             .catch(error => {
//                 console.error('An error occurred while deleting the address', error);
//             });
//         });
//     });
// });

</script>

<script>
    //  function handleAddressDeletion(addressId, addressDiv) {
    //     // Show SweetAlert confirmation dialog
    //     Swal.fire({
    //         title: 'Are you sure?',
    //         text: 'You won\'t be able to revert this!',
    //         icon: 'warning',
    //         showCancelButton: true,
    //         confirmButtonColor: '#3085d6',
    //         cancelButtonColor: '#d33',
    //         confirmButtonText: 'Yes, delete it!'
    //     }).then((result) => {
    //         if (result.isConfirmed) {
    //             // User confirmed, send AJAX request to delete the address
    //             fetch(`/delete_address/${addressId}`, {
    //                 method: 'DELETE',
    //             })
    //             .then(response => response.json())
    //             .then(data => {
    //                 console.log('Server Response:', data);

    //                 if (data.success) {
    //                     if (addressDiv) {
    //                         addressDiv.remove(); // Remove the div from the DOM
    //                         Swal.fire('Address div removed successfully.');
    //                     } else {
    //                         Swal.fire('Address card not found in the DOM');
    //                     }
    //                 } else {
    //                     console.error('Failed to delete the address. Server response:', data);
    //                 }
    //             })
    //             .catch(error => {
    //                 console.error('An error occurred while deleting the address', error);
    //             });
    //         }
    //     });
    // }

    // document.addEventListener('DOMContentLoaded', function () {
    //     // Add an event listener for the "Delete" buttons
    //     document.addEventListener('click', function (event) {
    //         if (event.target.classList.contains('delete-address')) {
    //             event.preventDefault();
    //             const addressId = event.target.getAttribute('data-address-id');
    //             const addressDiv = document.getElementById(`address${addressId}`);
    //             console.log('Address ID:', addressId);
    //             console.log('Address Div:', addressDiv);

    //             // Call the function to handle address deletion
    //             handleAddressDeletion(addressId, addressDiv);
    //         }
    //     });
    // });

//     document.addEventListener('DOMContentLoaded', function () {
//     // Select all delete buttons
//     var deleteButtons = document.querySelectorAll('.delete-address');

//     // Add event listener to each delete button
//     deleteButtons.forEach(function (button) {
//         button.addEventListener('click', function (event) {
//             event.preventDefault(); // Prevent the default behavior of the button

//             // Get the address ID from the data attribute
//             var addressId = button.getAttribute('data-address-id');

//             // Make an AJAX request to delete the address
//             fetch(`/delete_address/${addressId}`, {
//                 method: 'DELETE',
//             })
//             .then(response => response.json())
//             .then(data => {
//                 // Check if the address was successfully deleted
//                 if (data.success) {
//                     // Find and remove the corresponding address div
//                     var addressDiv = document.getElementById(`address${addressId}`);
//                     if (addressDiv) {
//                         addressDiv.parentNode.removeChild(addressDiv);
//                     } else {
//                         console.error('Address div not found');
//                     }
//                 } else {
//                     console.error('Failed to delete the address');
//                 }
//             })
//             .catch(error => {
//                 console.error('An error occurred while deleting the address', error);
//             });
//         });
//     });
// });
    document.addEventListener('DOMContentLoaded', function () {
        const deleteButtons = document.querySelectorAll('.delete-address');

        deleteButtons.forEach(function (button) {
            button.addEventListener('click', function (event) {
                event.preventDefault();
                const addressId = event.target.getAttribute('data-address-id');
                const addressDiv = document.getElementById(`address${addressId}`);
                console.log('Address ID:', addressId);
                console.log('Address Div:', addressDiv);

                // Show SweetAlert confirmation dialog
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'You won\'t be able to revert this!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // User confirmed, send AJAX request to delete the address
                        fetch(`/delete_address/${addressId}`, {
                            method: 'DELETE',
                        })
                        .then(response => response.json())
                        .then(data => {
                            console.log('Server Response:', data);

                            if (data.success) {
                                console.log("hii")
                                if (addressDiv) {
                                    addressDiv.remove(); // Remove the div from the DOM
                                    Swal.fire('Address div removed successfully.');
                                    window.location.href = '/profile#tab-address'
                                } else {
                                    Swal.fire('Address card not found in the DOM');
                                }
                            } else {
                                console.error('Failed to delete the address. Server response:', data);
                            }
                        })
                        .catch(error => {
                            console.error('An error occurred while deleting the address', error);
                        });
                    }
                });
            });
        });
    });
</script>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        const tabLinks = document.querySelectorAll('.nav-link');
        
        tabLinks.forEach(function(link) {
            link.addEventListener('click', function(event) {
                event.preventDefault()
                const tabId = link.getAttribute('href').replace('#', ''); // Get the tab ID
                window.location.hash = tabId; // Update the URL hash
                console.log(tabId)
            });
        });
    });
</script>

<!-- JavaScript code to activate the correct tab based on the URL hash -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Read the URL hash
        const activateTabFromHash = () => {
        const hash = window.location.hash;
        
        if (hash) {
            // Find the corresponding tab link and activate it
            const tabLink = document.querySelector(`[href="${hash}"]`);
            
            if (tabLink) {
                tabLink.click(); // Simulate a click event to activate the tab
            }
        }
    }
    activateTabFromHash();

// Listen for changes to the URL hash and activate the corresponding tab
window.addEventListener('hashchange', activateTabFromHash);
    });
</script>


<script>
    function validAddress() {
        // Get form values
        const firstname = document.getElementById('fname1').value;
        const lastname =  document.getElementById('lname1').value;
        const mobile = document.getElementById('mobile1').value;
        const email = document.getElementById('email1').value;
        const housename = document.getElementById('housename').value;
        const state = document.getElementById('state').value;
        const district = document.getElementById('district').value;
        const city = document.getElementById('city').value;
        const pincode = document.getElementById('pin').value;

        // Clear all existing error messages
        clearAllErrors();

        // Validate each field
        if (!firstname) {
            displayError('fname-error', 'First Name field should not be empty!');
            return false;
        }

        if (!lastname) {
            displayError('lname-error', 'Last Name field should not be empty!');
            return false;
        }

        if (!state) {
            displayError('state-error', 'State field should not be empty!');
            return false;
        }

        if (!housename) {
            displayError('housename-error', 'House Name field should not be empty!');
            return false;
        }

        const mobileRegex = /^[6-9]\d{9}$/;
        if (!mobile || !mobileRegex.test(mobile)) {
            displayError('mobile-error', 'Mobile number should be a 10-digit valid number');
            return false;
        }

        if (new Set(mobile).size === 1) {
            displayError('mobile-error', 'Mobile number should not consist of the same digit.');
            return false;
        }

        const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/;
        if (!email || !emailRegex.test(email)) {
            displayError('email-error', 'Please enter a valid email address. (eg: example@gmail.com)');
            return false;
        }

        if (!district) {
            displayError('district-error', 'District field should not be empty!');
            return false;
        }

        if (!city) {
            displayError('city-error', 'City field should not be empty!');
            return false;
        }

        const pincodeRegex = /^\d{6}$/;
        if (!pincode || !pincode.match(pincodeRegex)) {
            displayError('pin-error', 'Pincode should be a 6-digit numeric value.');
            return false;
        }

        // Check if any field is empty
        if (!firstname || !lastname || !mobile || !email || !housename || !city || !state || !district || !pincode) {
            displayError('all-error', 'All address fields are required.');
            return false;
        }

        // If everything is valid, return true
        return true;
    }

    // Function to clear all error messages
    function clearAllErrors() {
        const errorElements = document.querySelectorAll('.error-message');
        errorElements.forEach((element) => {
            element.textContent = '';
        });
    }

    // Function to display an error message for a specific field
    function displayError(elementId, message) {
        document.getElementById(elementId).textContent = message;
    }
</script>


<script>
    function validateEdit() {
        const firstname = document.getElementById('editFirstName').value;
        const lastname = document.getElementById('editLastName').value;
        const mobile = document.getElementById('editMobile').value;
        const email = document.getElementById('editEmail').value;
        const housename = document.getElementById('editHousename').value;
        const state = document.getElementById('editState').value;
        const district = document.getElementById('editDistrict').value;
        const city = document.getElementById('editCity').value;
        const pincode = document.getElementById('editPin').value;

        const errors = document.querySelectorAll('.error');

        for (let error of errors) {
            error.textContent = '';
        }

        let isValid = true;

        if (!firstname) {
            document.getElementById('fname1-error').textContent = 'First Name field should not be empty!';
            isValid = false;
        }

        if (!lastname) {
            document.getElementById('lname1-error').textContent = 'Last Name field should not be empty!';
            isValid = false;
        }

        if (!state) {
            document.getElementById('state1-error').textContent = 'State field should not be empty!';
            isValid = false;
        }

        if (!housename) {
            document.getElementById('housename1-error').textContent = 'House Name field should not be empty!';
            isValid = false;
        }

        const mobileRegex = /^[6-9]\d{9}$/;

        if (!mobile || !mobileRegex.test(mobile)) {
            document.getElementById('mobile1-error').textContent = 'Mobile number should be a 10-digit valid number';
            isValid = false;
        }

        if (new Set(mobile).size === 1) {
            document.getElementById('mobile1-error').textContent = 'Mobile number should not consist of the same digit.';
            isValid = false;
        }

        const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/;

        if (!email || !emailRegex.test(email)) {
            document.getElementById('email1-error').textContent = 'Please enter a valid email address. (e.g., example@gmail.com)';
            isValid = false;
        }

        if (!district) {
            document.getElementById('district1-error').textContent = 'District field should not be empty!';
            isValid = false;
        }

        if (!city) {
            document.getElementById('city1-error').textContent = 'City field should not be empty!';
            isValid = false;
        }

        const pincodeRegex = /^\d{6}$/;

        if (!pincode || !pincode.match(pincodeRegex)) {
            document.getElementById('pin1-error').textContent = 'Pincode should be a 6-digit numeric value.';
            isValid = false;
        }

        if (!isValid) {
            document.getElementById('all-error').textContent = 'Please fix the errors above.';
        }

        return isValid;
    }
</script>

<script>
    function validUser() {
      const fname = document.getElementById('fname');
      const lname = document.getElementById('lname');
      const email = document.getElementById('email');
      const mobile = document.getElementById('mobile');
   
  
      const fnameError = document.getElementById('fname-error');
      const lnameError = document.getElementById('lname-error');
      const emailError = document.getElementById('email-error');
      const mobileError = document.getElementById('mobile-error');
   
  
      fnameError.textContent = '';
      lnameError.textContent = '';
      emailError.textContent = '';
      mobileError.textContent = '';
    
  
      let isValid = true;
  
      if (fname.value === '') {
          fnameError.textContent = 'First Name is required';
          isValid = false;
      }
  
      if (lname.value === '') {
          lnameError.textContent = 'Last Name is required';
          isValid = false;
      }
  
      if (email.value === '') {
        emailError.textContent = 'Email is required';
        isValid = false;
    } else {
        // Enhanced email validation using a regular expression
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

        if (!emailRegex.test(email.value)) {
            emailError.textContent = 'Invalid email format';
            isValid = false;
        }
    }
  
      if (mobile.value === '') {
          mobileError.textContent = 'Mobile is required';
          isValid = false;
      } else if (/^(\d)\1+$/.test(mobile.value)) {
          mobileError.textContent = 'Mobile number should not consist of the same digit.';
          isValid = false;
      } else {
          const mobileRegex = /^[6-9]\d{9}$/;
          if (!mobileRegex.test(mobile.value)) {
              mobileError.textContent = 'Mobile number should be a 10-digit valid number';
              isValid = false;
          }
      }
  
     
      return isValid;
  }
  </script>

  <script>

function validateCurrentPassword() {
    const currentPassword = document.getElementById('currentPassword').value;
    const currentPasswordError = document.getElementById('currentPassword-error');

    // Validate that the current password is not empty
    if (currentPassword.length === 0) {
        currentPasswordError.textContent = 'Current password is required';
    } else {
        currentPasswordError.textContent = '';
    }
}

function validatePasswordLength() {
    const newPassword = document.getElementById('newPassword').value;
    const newPasswordError = document.getElementById('newPassword-error');

    if (newPassword.length < 8) {
        newPasswordError.textContent = 'Password must be at least 8 characters long';
    } else {
        newPasswordError.textContent = '';
    }
}

function validatePasswordMatch() {
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;
    const confirmPasswordError = document.getElementById('confirmPassword-error');

    if (newPassword !== confirmPassword) {
        confirmPasswordError.textContent = 'Passwords do not match';
    } else {
        confirmPasswordError.textContent = '';
    }
}

function changePassword() {
    const currentPassword = document.getElementById('currentPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;

    // Validate current password, length, and match on the client-side
    if (currentPassword.length === 0) {
        document.getElementById('currentPassword-error').textContent = 'Current password is required';
        return;
    }

    if (newPassword.length < 8) {
        document.getElementById('newPassword-error').textContent = 'Password must be at least 8 characters long';
        return;
    }

    if (newPassword !== confirmPassword) {
        document.getElementById('confirmPassword-error').textContent = 'Passwords do not match';
        return;
    }

    // Perform AJAX request to validate current password and update password
    fetch('/change_password', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            currentPassword,
            newPassword,
            confirmPassword,
        }),
    })
    .then(response => response.json())
    .then(data => {
        // Handle the response from the server
        if (data.success) {
            document.getElementById('currentPassword').value = '';
            document.getElementById('newPassword').value = '';
            document.getElementById('confirmPassword').value = '';
            // Password changed successfully, redirect or display a success message
            const successMessage = document.getElementById('success-message');
            successMessage.textContent = 'Password changed successfully!';
            setTimeout(() => {
                successMessage.textContent = '';
            }, 3000);
        } else {
            // Display an error message to the user
            document.getElementById('failed-message').textContent = data.error;
        }
    })
    .catch(error => {
        console.error('Error:', error);
        // Handle other errors if needed
    });
}
</script>
  

<%- include('../userMainlayouts/mainfooter.ejs') %>